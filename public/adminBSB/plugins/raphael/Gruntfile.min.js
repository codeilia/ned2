"use strict";module.exports=function(b){var a=b.file.readJSON("package.json");b.initConfig({pkg:a,banner:b.file.read("dev/copy.js").replace(/@VERSION/,a.version),uglify:{options:{banner:"<%= banner %>"},dist:{src:"<%= concat.dist.dest %>",dest:"<%= pkg.name %>-min.js"},nodeps:{src:"<%= concat.nodeps.dest %>",dest:"<%= pkg.name %>-nodeps-min.js"}},replace:{dist:{options:{patterns:[{match:"VERSION",replacement:"<%= pkg.version %>"}]},files:[{expand:true,flatten:true,src:["<%= concat.dist.dest %>","<%= concat.nodeps.dest %>"],dest:"./"}]}},concat:{dist:{dest:"<%= pkg.name %>.js",src:["dev/eve.js","dev/raphael.core.js","dev/raphael.svg.js","dev/raphael.vml.js","dev/raphael.amd.js"]},nodeps:{dest:"<%= pkg.name %>-nodeps.js",src:["dev/raphael.core.js","dev/raphael.svg.js","dev/raphael.vml.js","dev/raphael.amd.js"]}}});b.loadNpmTasks("grunt-contrib-concat");b.loadNpmTasks("grunt-contrib-uglify");b.loadNpmTasks("grunt-replace");b.registerTask("default",["concat","replace","uglify"])};
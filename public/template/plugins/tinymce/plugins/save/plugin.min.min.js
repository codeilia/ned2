tinymce.PluginManager.add("save",function(f){function i(){var a;a=tinymce.DOM.getParent(f.id,"form");if(f.getParam("save_enablewhendirty",true)&&!f.isDirty()){return}tinymce.triggerSave();if(f.getParam("save_onsavecallback")){f.execCallback("save_onsavecallback",f);f.nodeChanged();return}if(a){f.setDirty(false);if(!a.onsubmit||a.onsubmit()){if(typeof a.submit=="function"){a.submit()}else{h(f.translate("Error: Form submit field collision."))}}f.nodeChanged()}else{h(f.translate("Error: No form element found."))}}function h(a){f.notificationManager.open({text:a,type:"error"})}function j(){var a=tinymce.trim(f.startContent);if(f.getParam("save_oncancelcallback")){f.execCallback("save_oncancelcallback",f);return}f.setContent(a);f.undoManager.clear();f.nodeChanged()}function g(){var a=this;f.on("nodeChange dirty",function(){a.disabled(f.getParam("save_enablewhendirty",true)&&!f.isDirty())})}f.addCommand("mceSave",i);f.addCommand("mceCancel",j);f.addButton("save",{icon:"save",text:"Save",cmd:"mceSave",disabled:true,onPostRender:g});f.addButton("cancel",{text:"Cancel",icon:false,cmd:"mceCancel",disabled:true,onPostRender:g});f.addShortcut("Meta+S","","mceSave")});
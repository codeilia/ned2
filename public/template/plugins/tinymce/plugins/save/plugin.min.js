tinymce.PluginManager.add("save",function(b){function d(){var f;f=tinymce.DOM.getParent(b.id,"form");if(b.getParam("save_enablewhendirty",true)&&!b.isDirty()){return}tinymce.triggerSave();if(b.getParam("save_onsavecallback")){b.execCallback("save_onsavecallback",b);b.nodeChanged();return}if(f){b.setDirty(false);if(!f.onsubmit||f.onsubmit()){if(typeof f.submit=="function"){f.submit()}else{e(b.translate("Error: Form submit field collision."))}}b.nodeChanged()}else{e(b.translate("Error: No form element found."))}}function e(f){b.notificationManager.open({text:f,type:"error"})}function c(){var f=tinymce.trim(b.startContent);if(b.getParam("save_oncancelcallback")){b.execCallback("save_oncancelcallback",b);return}b.setContent(f);b.undoManager.clear();b.nodeChanged()}function a(){var f=this;b.on("nodeChange dirty",function(){f.disabled(b.getParam("save_enablewhendirty",true)&&!b.isDirty())})}b.addCommand("mceSave",d);b.addCommand("mceCancel",c);b.addButton("save",{icon:"save",text:"Save",cmd:"mceSave",disabled:true,onPostRender:a});b.addButton("cancel",{text:"Cancel",icon:false,cmd:"mceCancel",disabled:true,onPostRender:a});b.addShortcut("Meta+S","","mceSave")});